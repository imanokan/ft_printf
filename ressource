h;:ttps://www.cprogramming.com/tutorial/c/lesson17.html
https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/va-arg-va-copy-va-end-va-start?view=vs-2019
http://www.cplusplus.com/reference/cstdio/printf/

TO DO :
- test csp voir slack
- precisions
- float
- diouxX
-fsanitaize=address


mettre le s de specifier dans la struc // tjrs sure ?
et puis verifier l'ordre des flags dans diouxX
flag space et -
finalement f




flag hh ll:
fonction qui regarde si le flag est allumé si oui.
conv->c = va_arg(all->a_list,long long int) //par exemple
check les variables de la fonction , me semble faux mais à cette heure ci flm de réfléchir

Pour gérer les conversions créer une deuxième structure avec des variables de chaque type de conversion puis dans la fonction même faire un itoa afin de les pprint finally
t_spec *all;
all->conv = (t_conv*)malloc(sizeof(t_conv)); //if everything okey

t_personnage Perso;
Perso->anime = (t_anime*)malloc(sizeof(t_anime));

A FAIRE:
flg hh ll
et petite fonction  + -

pour s
precision et width
si il y a les 2 , first width & precision
il y a d'abord une première fois ft_strlen puis une deuxième fois avec le space dedans pour recalculer le precision

pour s
width
Pour finir S : dans la fonction width_min la condition if est dans ce sens all->len_arg > all->len ceci est valable juste pour la width que pour width et precision dans la meme condition
pour le reste dans l'autre sens ça
 d c'est dans l'autre sens all->len_arg < all->len



float;
apres la premiere etape , quand tu veux soustraire nb-float et nb-int alors verifier l'arrondi dans la memoire stocker diff


//ajouter param width pour plus de flexibilite et pas de rep
// changer ft_putnbr en long long comme ca il peut tout prendre

tmp_float ; to look at the next one if round up in necessaire or not

LIBFTPRINTF.H
double f; //float de va_arg
unsigned int o; // unsigned int
double deci;
double fl;  //float utilisé pour les calculs
int ent; //partie entière float
int fl_int; // partie float arrondie caster en un int
char *fl_str; // float en str
char *x_str;
char *o_str;
char *p_str;
char *tmp_str; // width_precision chaine pour les modif

int  n; //pour check binary
va_list a_list;
t_conv *conv;
char type;
char *s_filled;
char *s_filled_p;
int 	precision;
char *s_filled_d;
char *filled_float;
char 	p; // char + ou - pour all->plus
int check;
int point;
int wp; // check si w et p existe en meme temps
int isneg;
int check1; //check doublon de signes
int stop;
int esp; //flag space
